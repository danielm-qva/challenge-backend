services:
  redis:
    container_name: redis_db
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    networks:
      - dfl
    restart: always

  mongo:
    container_name: mongo_db
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
#      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    networks:
      - dfl
    restart: always

  reception-orders:
    container_name: reception-orders
    build: ./
    volumes:
      - ./src:/usr/app/src
    ports:
      - ${NEST_PORT_APP}:3000
    environment:
      - NEST_PORT_APP=3000
      - NEST_MONGO_URL=mongodb://mongo:27017/challenge-backend
      - NEXT_APP_JWT_SECRET=sasd111qsSaskkjshehyyluuwolsjush**77197hbbaggt
      - NEST_PORT_REDIS=6379
      - NEST_HOST_REDIS=redis
      - NEST_DOMINE_REGISTER=https://ll.com,https://ll1.com,https://ll2.com
    command: npm run start:dev
    networks:
      - dfl
    depends_on:
      - mongo
      - redis

networks:
  dfl:
    driver: bridge

volumes:
  redis:
    driver: local
  mongo: { }
